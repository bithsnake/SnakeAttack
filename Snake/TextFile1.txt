

older code from Program.Update()

////Create and init the player
//Player snake = new Player('☻', Direction.None);
//snake.Position = new Position(new Random().Next(1, roomWidth), new Random().Next(1, roomHeight));


////Create the first food 
//Food food = new Food('♥');

///*TEST*/
////food.Position = new Position(snake.X, snake.Y);
//food.Position = new Position(new Random().Next(1, roomWidth), new Random().Next(1, roomHeight));  

////Create the food in a X & Y coordinate that the snake is not initialized in
//while (food.X == snake.X && food.Y == snake.Y)
//{
//    food.Position = new Position(new Random().Next(1, roomWidth), new Random().Next(1, roomHeight));
//    continue;
//}

////Add the instances to the world
//world.gameObjects.Add(snake);
//world.gameObjects.Add(food);



Update score before

            //Update score
//if (food.Position.X == snake.Position.X && food.Position.Y == snake.Position.Y)
//{
//    SetColorAndSound(world.globalScore, lowRank, mediumRank, highRank);
//    frameRate = SetDifficulty(world.globalScore, lowRank, mediumRank, highRank,currentRank);
//    SetRank(world.globalScore);
//    world.globalTimer = 30;
//    world.globalScore++;
//    world.gameObjects.Remove(food);
//    world.CreateFood();
//    //food.ChangePosition();
//}






This could maybe used in then middle of the game instead?


foreach (var obj in world.gameObjects)
{
    if (obj is Food && obj is GameObject)
    {
        obj.Position = new Position(new Random().Next(1, roomWidth), new Random().Next(1, roomHeight));
        if (obj.X == snake.X && obj.Y == snake.Y)
        {
            // Try again'
            continue;
        }

    }
}

Use this elsewere

//Food food = new Food('♥');
//world.gameObjects.Add(food);
//food.ChangePosition();